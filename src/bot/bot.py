import logging
from typing import Optional

from telegram.ext import Application

from .handlers import BotHandlers
from ..services.database import DatabaseService
from ..services.youtube_downloader import YouTubeDownloader
from ..config.settings import settings

logger = logging.getLogger(__name__)

class YouTubeBotApp:
    """–û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram –±–æ—Ç–∞"""
    
    def __init__(self, token: str = None):
        self.token = token or settings.BOT_TOKEN
        self.application: Optional[Application] = None
        self.db_service = DatabaseService()
        self.youtube_service = YouTubeDownloader()
        self.handlers = BotHandlers(self.db_service, self.youtube_service)
    
    def setup(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        settings.validate()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        self.db_service.init_database()
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        self.application = Application.builder().token(self.token).build()
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        self.handlers.register_handlers(self.application)
        
        logger.info("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        if not self.application:
            raise RuntimeError("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ. –í—ã–∑–æ–≤–∏—Ç–µ setup() —Å–Ω–∞—á–∞–ª–∞")
        
        logger.info("üöÄ YouTube Bot –∑–∞–ø—É—â–µ–Ω!")
        logger.info("üì∫ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ YouTube –≤–∏–¥–µ–æ")
        
        self.application.run_polling()
    
    def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞"""
        if self.application:
            self.application.stop()
            logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

