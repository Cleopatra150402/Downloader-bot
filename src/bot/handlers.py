import logging
import os
from typing import TYPE_CHECKING

from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

if TYPE_CHECKING:
    from ..services.database import DatabaseService
    from ..services.youtube_downloader import YouTubeDownloader

from ..models.download import Download

logger = logging.getLogger(__name__)

class BotHandlers:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞"""
    
    def __init__(self, db_service: 'DatabaseService', youtube_service: 'YouTubeDownloader'):
        self.db_service = db_service
        self.youtube_service = youtube_service
    
    def register_handlers(self, application: Application):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
        application.add_handler(CommandHandler("start", self.start_command))
        application.add_handler(CommandHandler("help", self.help_command))
        application.add_handler(CommandHandler("stats", self.stats_command))
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message))
    
    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /start"""
        welcome_message = """
üé• –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è YouTube –≤–∏–¥–µ–æ!

üì∫ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ YouTube
‚è±Ô∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 10 –º–∏–Ω—É—Ç
üìä –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 50MB

–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ!

–ö–æ–º–∞–Ω–¥—ã:
/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
/help - –ø–æ–º–æ—â—å  
/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–π
"""
        await update.message.reply_text(welcome_message)
    
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /help"""
        help_text = """
üîß –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:

1. –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ
2. –î–æ–∂–¥–∏—Å—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ (–æ–±—ã—á–Ω–æ 10-30 —Å–µ–∫—É–Ω–¥)
3. –ü–æ–ª—É—á–∏ –≤–∏–¥–µ–æ –ø—Ä—è–º–æ –≤ —á–∞—Ç!

‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:
‚Ä¢ –¢–æ–ª—å–∫–æ YouTube –≤–∏–¥–µ–æ
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 10 –º–∏–Ω—É—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é
‚Ä¢ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –¥–æ 50MB
‚Ä¢ –¢–æ–ª—å–∫–æ –ø—É–±–ª–∏—á–Ω—ã–µ –≤–∏–¥–µ–æ

–ü—Ä–∏–º–µ—Ä—ã —Å—Å—ã–ª–æ–∫:
‚Ä¢ https://www.youtube.com/watch?v=...
‚Ä¢ https://youtu.be/...
‚Ä¢ https://youtube.com/shorts/...
"""
        await update.message.reply_text(help_text)
    
    async def stats_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        user_id = update.effective_user.id
        stats = self.db_service.get_user_stats(user_id)
        
        if stats:
            total = sum(stat['count'] for stat in stats)
            stats_text = f"üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–π:\n\nüì∫ YouTube: {total} –≤–∏–¥–µ–æ"
        else:
            stats_text = "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–∫–∞—á–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ."
        
        await update.message.reply_text(stats_text)
    
    def is_youtube_url(self, url: str) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Å—ã–ª–∫–∞ YouTube URL"""
        youtube_domains = ['youtube.com', 'youtu.be', 'www.youtube.com', 'm.youtube.com']
        return any(domain in url.lower() for domain in youtube_domains)
    
    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å YouTube —Å—Å—ã–ª–∫–∞–º–∏"""
        user_id = update.effective_user.id
        text = update.message.text.strip()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ YouTube —Å—Å—ã–ª–∫–∞
        if not self.is_youtube_url(text):
            await update.message.reply_text(
                "‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è —Å—Å—ã–ª–∫–∞!\n\n"
                "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ:\n"
                "‚Ä¢ https://www.youtube.com/watch?v=...\n"
                "‚Ä¢ https://youtu.be/...\n"
                "‚Ä¢ https://youtube.com/shorts/..."
            )
            return
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        status_message = await update.message.reply_text(
            "‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é YouTube –≤–∏–¥–µ–æ...\n"
            "–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 30 —Å–µ–∫—É–Ω–¥ ‚è±Ô∏è"
        )
        
        try:
            # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
            success, result, info = self.youtube_service.download(text)
            
            if success:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
                with open(result, 'rb') as video_file:
                    caption = f"üé• {info['title'][:100]}\nüì∫ YouTube"
                    if info.get('file_size'):
                        caption += f"\nüìä {info['file_size'] // (1024*1024)} MB"
                    if info.get('view_count'):
                        caption += f"\nüëÄ {info['view_count']:,} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤"
                    
                    await update.message.reply_video(
                        video_file,
                        caption=caption,
                        supports_streaming=True
                    )
                
                # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                os.unlink(result)
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
                download = Download(
                    user_id=user_id,
                    platform='youtube',
                    video_url=text,
                    status='completed'
                )
                self.db_service.save_download(download)
                
                await status_message.edit_text("‚úÖ –í–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
            else:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—à–∏–±–∫—É –≤ –ë–î
                download = Download(
                    user_id=user_id,
                    platform='youtube',
                    video_url=text,
                    status='failed'
                )
                self.db_service.save_download(download)
                
                await status_message.edit_text(f"‚ùå –û—à–∏–±–∫–∞: {result}")
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            await status_message.edit_text(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ.\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É."
            )

